//using MediatR;
//using Microsoft.AspNetCore.Builder;
//using Microsoft.AspNetCore.Hosting;
//using Microsoft.EntityFrameworkCore;
//using Microsoft.Extensions.Configuration;
//using Microsoft.Extensions.DependencyInjection;
//using Swashbuckle.AspNetCore.Swagger;
//using SwissKnife.API.Application.Commands;
//using SwissKnife.API.Application.Queries;
//using SwissKnife.API.Hubs;
//using SwissKnife.Infrastructure;
//using System;
//using System.Collections.Generic;
//using System.IO;
//using System.Reflection;
//using Microsoft.Extensions.Hosting;
//using SwissKnife.Domain.AggregatesModel.ProductAggregate;
//using SwissKnife.Infrastructure.Repositories;

//namespace SwissKnife.API
//{
//    public class Startup
//    {
//        public Startup(IWebHostEnvironment env)
//        {
//            var builder = new ConfigurationBuilder()
//                .SetBasePath(env.ContentRootPath)
//                .AddJsonFile("appsettings.json", true, true)
//                .AddEnvironmentVariables();


//            Configuration = builder.Build();
//        }

//        public IConfigurationRoot Configuration { get; }

//        // This method gets called by the runtime. Use this method to add services to the container.
//        // For more information on how to configure your application, visit https://go.microsoft.com/fwlink/?LinkID=398940
//        public void ConfigureServices(IServiceCollection services)
//        {
//            services.AddScoped<IQueriesService, QueriesService>(x =>
//                new QueriesService(Configuration.GetConnectionString("DatabaseString")));

//            services.AddScoped<IProductRepository, ProductRepository>();

//            services.AddDbContext<AppDbContext>(options =>
//                options.UseSqlServer(Configuration.GetConnectionString("DatabaseString")));

//            services.AddCors(options =>
//            {
//                options.AddPolicy("CorsPolicy",
//                    builder => builder.WithOrigins("http://localhost:4200")
//                        .AllowAnyMethod()
//                        .AllowAnyHeader()
//                        .AllowCredentials());
//            });

//            services.AddMediatR(typeof(CreateProductCommandHandler).GetTypeInfo().Assembly);

//            services.AddSignalR();
//            services.AddControllers();
//            //services.AddMvc();
//            //services.AddSwaggerDocumentation();

//            // In production, the Angular files will be served from this directory
//            //services.AddSpaStaticFiles(configuration => { configuration.RootPath = "../AngularApp/dist"; });
//        }

//        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
//        public void Configure(IApplicationBuilder app, IWebHostEnvironment env)
//        {
//            if (env.IsDevelopment())
//            {
//                app.UseDeveloperExceptionPage();
//                //app.UseSwaggerDocumentation();
//            }
//            else
//            {
//                app.UseExceptionHandler("/Error");
//                // The default HSTS value is 30 days. You may want to change this for production scenarios, see https://aka.ms/aspnetcore-hsts.
//                app.UseHsts();
//            }

//            app.UseHttpsRedirection();
//            app.UseStaticFiles();
//            app.UseCors("CorsPolicy");
//            app.UseRouting();

//            app.UseEndpoints(endpoints =>
//            {
//                endpoints.MapControllers();
//            });
//        }
//    }

//    /// <summary>
//    ///     Extension method or middleware for Swagger configuration in asp.net core for swagger version >2.0
//    ///     Reference From : https://ppolyzos.com/2017/10/30/add-jwt-bearer-authorization-to-swagger-and-asp-net-core/
//    /// </summary>
//    public static class SwaggerServiceExtensions
//    {
//        public static IServiceCollection AddSwaggerDocumentation(this IServiceCollection services)
//        {
//            services.AddSwaggerGen(c =>
//            {
//                c.SwaggerDoc("v1.0", new Info {Title = "Main API v1.0", Version = "v1.0"});

//                //Locate the XML file being generated by ASP.NET...
//                var xmlFile = $"{Assembly.GetExecutingAssembly().GetName().Name}.XML";
//                var xmlPath = Path.Combine(AppContext.BaseDirectory, xmlFile);
//                if (File.Exists(xmlPath)) c.IncludeXmlComments(xmlPath);


//                // Swagger 2.+ support
//                var security = new Dictionary<string, IEnumerable<string>>
//                {
//                    {"Bearer", new string[] { }}
//                };
//                c.AddSecurityDefinition("Bearer", new ApiKeyScheme
//                {
//                    Description =
//                        "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
//                    Name = "Authorization",
//                    In = "header",
//                    Type = "apiKey"
//                });
//                //Must require for swagger version > 2.0
//                c.AddSecurityRequirement(security);
//            });

//            return services;
//        }

//        public static IApplicationBuilder UseSwaggerDocumentation(this IApplicationBuilder app)
//        {
//            app.UseSwagger();
//            app.UseSwaggerUI(c =>
//            {
//                c.SwaggerEndpoint("/swagger/v1.0/swagger.json", "Web API v1.0");
//                c.DocumentTitle = "Title Documentation";
//                //Reference link : https://stackoverflow.com/questions/22008452/collapse-expand-swagger-response-model-class
//                //Reference link : https://swagger.io/docs/open-source-tools/swagger-ui/usage/deep-linking/
//                //  c.DocExpansion(Swashbuckle.AspNetCore.SwaggerUI.DocExpansion.None);
//                // c.DocExpansion(DocExpansion.Full);
//                //    //Reference document: https://docs.microsoft.com/en-us/aspnet/core/tutorials/getting-started-with-swashbuckle?view=aspnetcore-2.2&tabs=visual-studio
//                //    //To serve the Swagger UI at the app's root (http://localhost:<port>/), set the RoutePrefix property to an empty string:
//                c.RoutePrefix = string.Empty;
//            });

//            return app;
//        }
//    }
//}